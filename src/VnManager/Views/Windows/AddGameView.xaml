<controls:AdonisWindow x:Class="VnManager.Views.Windows.AddGameView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vmw="clr-namespace:VnManager.ViewModels.Windows"
        xmlns:local="clr-namespace:VnManager.Views.Windows"
        xmlns:s="https://github.com/canton7/Stylet"
        xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
        xmlns:controls="clr-namespace:AdonisUI.Controls;assembly=AdonisUI"
        xmlns:adonisUi="clr-namespace:AdonisUI;assembly=AdonisUI"
        xmlns:ex="clr-namespace:VnManager.Extensions"
        xmlns:conv="clr-namespace:VnManager.Converters"
        xmlns:mvd="https://github.com/fantasticfiasco/mvvm-dialogs"
        mvd:DialogServiceViews.IsRegistered="True"
        mc:Ignorable="d"        
        Title="Add Game" Height="400" Width="500">
    <Grid>
        <Grid x:Name="AddVnRoot" Margin="15,10,10,10" MinWidth="200">
            <Grid.Resources>
                <s:BoolToVisibilityConverter x:Key="boolToVisConverter" TrueVisibility="Visible" FalseVisibility="Hidden"/>
                <conv:EnumToBooleanConverter x:Key="EnumToBooleanConverter"/>
                <vmw:BooleanAndConverter x:Key="booleanAndConverter"/>
                <conv:IntToStringConverter x:Key="intToStringConverter"/>
            </Grid.Resources>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Label Grid.Column="0" Content="Source:" MinWidth="50"/>
                <StackPanel Grid.Column="1" Orientation="Horizontal" Margin="5,0,0,0">
                    <RadioButton x:Name="VndbSource" Content="Vndb" IsChecked="True" Margin="0,0,5,0"/>
                    <!--<RadioButton x:Name="DlSiteSource" Content="DLSite" Margin="10,0,0,0"/>-->
                </StackPanel>
            </Grid>

            <Grid Grid.Row="1" x:Name="AddVndb" Visibility="{Binding IsChecked, ElementName=VndbSource, Converter={StaticResource boolToVisConverter}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <TextBlock Grid.Row="0" Text="Fill in the required information to add a visual novel to this program" Margin="0,15,0,15"/>

                <Grid  Grid.Row="1" Margin="0,0,0,15">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0" Text="Vndb Id or Name:" Width="100" FontStyle="Normal"/>
                    <StackPanel Grid.Column="1" Orientation="Horizontal" Margin="5,0,0,0" >
                        <RadioButton x:Name="VnIdRadio" Content="Id" Margin="0,0,5,0"  IsChecked="True"/>
                        <RadioButton x:Name="VnNameRadio" Content="Name" Margin="10,0,0,0" IsChecked="{Binding IsNameChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </StackPanel>
                </Grid>

                <Grid Grid.Row="2" Margin="0,0,0,15">
                    <Grid.Resources>
                        <vmw:VnIdNameBoolToStringConverter x:Key="VnIdStringConverter"/>
                    </Grid.Resources>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <StackPanel Orientation="Horizontal" Visibility="{Binding IsChecked, ElementName=VnIdRadio, Converter={StaticResource boolToVisConverter}}">
                        <TextBlock Text="{Binding IsNameChecked, Converter={StaticResource VnIdStringConverter}}" Margin="0,5,0,0"/>
                        <TextBox x:Name="txtVnId" Width="150" MaxLength="10" Height="25" ex:TextBoxExtensions.IsNumericOnly="True" Grid.ColumnSpan="2" Margin="10,0,0,0" Text="{Binding VnId, Converter={StaticResource intToStringConverter}}" />
                    </StackPanel>

                    <StackPanel Orientation="Horizontal" Visibility="{Binding IsChecked, ElementName=VnNameRadio, Converter={StaticResource boolToVisConverter}}">
                        <TextBlock Grid.Column="0" Text="{Binding IsNameChecked, Converter={StaticResource VnIdStringConverter}}" Margin="0,5,0,0"/>
                        <ComboBox x:Name="cmbVnName" Width="150" Height="25" IsEditable="{Binding CanChangeVnName, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Margin="10,0,0,0" Text="{Binding VnName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <Button Margin="5,0,0,0" Command="{s:Action Search}">
                            <iconPacks:PackIconMaterial Kind="{x:Static iconPacks:PackIconMaterialKind.Magnify}"  />
                        </Button>
                        <Button Margin="5,0,0,0" Command="{s:Action ResetName}">
                            <iconPacks:PackIconMaterial Kind="{x:Static iconPacks:PackIconMaterialKind.Restore}"  />
                        </Button>
                    </StackPanel>

                </Grid>

                <Grid Grid.Row="3" Margin="0,0,0,15">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0" Text="ExeType:"/>
                    <StackPanel Grid.Column="1" Orientation="Horizontal" Margin="5,0,0,0">
                        <RadioButton x:Name="ExeNormalRadio" Content="Normal" Margin="5,0,0,0" IsChecked="{Binding ExeTypes, Mode=TwoWay, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Normal}"/>
                        <iconPacks:PackIconMaterial Kind="{x:Static iconPacks:PackIconMaterialKind.HelpCircleOutline}" Margin="3,1,0,0" Height="14" Width="14" ToolTip="A single executable associated with a single ID"/>
                        <RadioButton x:Name="ExeLauncherRadio" Content="Launcher" Margin="5,0,0,0" IsChecked="{Binding ExeTypes, Mode=TwoWay, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Launcher}"/>
                        <iconPacks:PackIconMaterial Kind="{x:Static iconPacks:PackIconMaterialKind.HelpCircleOutline}" Margin="3,1,0,0" Height="14" Width="14" ToolTip="This executable has multiple game IDs associated with it"/>
                        <RadioButton x:Name="ExeCollectionRadio" Content="Collection" Margin="5,0,0,0" IsChecked="{Binding ExeTypes, Mode=TwoWay, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Collection}" />
                        <iconPacks:PackIconMaterial Kind="{x:Static iconPacks:PackIconMaterialKind.HelpCircleOutline}" Margin="3,1,0,0" Height="14" Width="14" ToolTip="There are multiple executables associated with a single ID"/>
                    </StackPanel>
                </Grid>

                <Grid Grid.Row="4" Margin="0,0,0,15">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <StackPanel Orientation="Horizontal" >
                        <StackPanel.Style>
                            <Style TargetType="StackPanel">
                                <Setter Property="Visibility" Value="Hidden"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ExeTypes}" Value="Normal">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ExeTypes}" Value="Launcher">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>
                        <TextBlock Text="Path:" Width="40"/>
                        <TextBox Grid.Column="1" x:Name="TextPath"  Width="300" IsReadOnly="True" IsReadOnlyCaretVisible="True" Text="{Binding ExePath, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <Button Grid.Column="2" Content="Browse" Margin="5,0,0,0" Command="{s:Action BrowseExe}"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Visibility="{Binding IsChecked, ElementName=ExeCollectionRadio, Converter={StaticResource boolToVisConverter}}">
                        <Button Content="Manage Executables" Width="150" Command="{s:Action ManageExes}"/>
                    </StackPanel>

                </Grid>

                <Grid Grid.Row="5" Margin="0,0,0,15">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <CheckBox Grid.Column="0" x:Name="chkCustomArg" Content="Custom Arguments" Margin="10,0,0,0" IsChecked="{Binding IsCustomArgsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                              IsEnabled="{Binding IsNotExeCollection}"/>
                    <CheckBox Grid.Column="1" x:Name="chkCustomIco" Content="Custom Icon" Margin="10,0,0,0" IsChecked="{Binding IsCustomIconChecked, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" 
                              IsEnabled="{Binding IsNotExeCollection}"/>
                </Grid>

                <Grid Grid.Row="6" Margin="0,0,0,15">
                    <Grid.IsEnabled>
                        <MultiBinding Converter="{StaticResource booleanAndConverter}">
                            <Binding ElementName="chkCustomArg" Path="IsChecked"/>
                        </MultiBinding>
                    </Grid.IsEnabled>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="Arguments:" Width="70" Margin="0,2,0,0" IsEnabled="False"/>
                    <TextBox Grid.Column="1"  Width="350" Text="{Binding ExeArguments, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                             IsEnabled="{Binding IsNotExeCollection}"/>

                </Grid>

                <Grid Grid.Row="7" Margin="0,0,0,15">
                    <Grid.IsEnabled>
                        <MultiBinding Converter="{StaticResource booleanAndConverter}">
                            <Binding ElementName="chkCustomIco" Path="IsChecked"/>
                        </MultiBinding>
                    </Grid.IsEnabled>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="IconPath:" Width="60" Margin="0,3,0,0"/>
                    <TextBox Grid.Column="1"  Width="300" IsReadOnly="True" IsReadOnlyCaretVisible="True" Text="{Binding ExeArguments, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <Button Grid.Column="2" Content="Browse" Margin="5,0,0,0" Command="{s:Action BrowseIcon}" />

                </Grid>

                <Grid Grid.Row="8" Margin="0,5,0,10">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Button Width="100" Height="30" Content="Submit" Command="{s:Action Submit}" Style="{DynamicResource {x:Static adonisUi:Styles.AccentButton}}"/>
                    <Button Width="85" Height="25" Grid.Column="1" Content="Cancel" Command="{s:Action Cancel}" Margin="10,0,0,0"/>
                </Grid>

                <!-- end of root -->
            </Grid>



            <!--<Grid Grid.Row="1" x:Name="AddDlSite" Visibility="{Binding IsChecked, ElementName=DlSiteSource, Converter={StaticResource boolToVisConverter}}">
                <TextBlock Text="Support for DLSite or other sources is not planned until issues with vndb are fixed" Margin="5,25,5,0"/>
            </Grid>-->
        </Grid>
    </Grid>
</controls:AdonisWindow>
